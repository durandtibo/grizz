name: Nightly Package Tests
on:
  schedule:
    - cron: '40 12 * * *' # run at 12:40 AM UTC
  workflow_dispatch:  # to trigger manually

permissions:
  contents: read


jobs:
  cyclic-imports:
    uses: ./.github/workflows/cyclic-imports.yaml

  stable-all:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [
          ubuntu-latest,
          ubuntu-24.04,
          ubuntu-22.04,
          ubuntu-24.04-arm,
          ubuntu-22.04-arm,
          macos-latest,
          macos-15,
          macos-14,
          macos-13,
        ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install "grizz[all]"

      - name: Run some checks
        run: |
          python tests/package_checks.py


  stable-min:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [
          ubuntu-latest,
          ubuntu-24.04,
          ubuntu-22.04,
          ubuntu-24.04-arm,
          ubuntu-22.04-arm,
          macos-latest,
          macos-15,
          macos-14,
          macos-13,
        ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install grizz

      - name: Run some checks
        run: |
          python tests/package_checks.py


  latest-all:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [
          ubuntu-latest,
          ubuntu-24.04,
          ubuntu-22.04,
          ubuntu-24.04-arm,
          ubuntu-22.04-arm,
          macos-latest,
          macos-15,
          macos-14,
          macos-13,
        ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install --pre "grizz[all]"

      - name: Run some checks
        run: |
          python tests/package_checks.py


  latest-min:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [
          ubuntu-latest,
          ubuntu-24.04,
          ubuntu-22.04,
          ubuntu-24.04-arm,
          ubuntu-22.04-arm,
          macos-latest,
          macos-15,
          macos-14,
          macos-13,
        ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install --pre grizz

      - name: Run some checks
        run: |
          python tests/package_checks.py


  ########################
  #     Dependencies     #
  ########################


  coola:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        coola-version: [ 0.9.0, 0.8.7 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install grizz

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.4
        with:
          package-name: 'coola'
          package-version: ${{ matrix.coola-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py


  iden:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        iden-version: [ 0.2.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install grizz

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.4
        with:
          package-name: 'iden'
          package-version: ${{ matrix.iden-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py


  objectory:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        objectory-version: [ 0.2.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install grizz

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.4
        with:
          package-name: 'objectory'
          package-version: ${{ matrix.objectory-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py


  polars:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        polars-version: [ 1.32.0, 1.0.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install grizz polars==${{ matrix.polars-version }}

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.4
        with:
          package-name: 'polars'
          package-version: ${{ matrix.polars-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py


  #################################
  #     Optional dependencies     #
  #################################


  clickhouse-connect:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        clickhouse-connect-version: [ 0.8.18, 0.7.19, 0.7.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install grizz

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.4
        with:
          package-name: 'clickhouse-connect'
          package-version: ${{ matrix.clickhouse-connect-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py


  colorlog:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        colorlog-version: [ 6.9.0, 6.7.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install arkas
        run: |
          pip install arkas

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.4
        with:
          package-name: 'colorlog'
          package-version: ${{ matrix.colorlog-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py


  numpy:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        numpy-version: [
          2.3.2,
          2.2.6,
          2.1.3,
          2.0.2,
          1.26.4,
          1.25.2,
          1.24.3,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install grizz

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.4
        with:
          package-name: 'numpy'
          package-version: ${{ matrix.numpy-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py


  pyarrow:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        pyarrow-version: [
          21.0.0,
          20.0.0,
          19.0.1,
          18.1.0,
          17.0.0,
          16.1.0,
          15.0.2,
          14.0.2,
          13.0.0,
          12.0.1,
          11.0.0,
          10.0.1,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install grizz

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.4
        with:
          package-name: 'pyarrow'
          package-version: ${{ matrix.pyarrow-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py


  scikit-learn:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.12', '3.11', '3.10', '3.9' ]
        scikit-learn-version: [
          1.7.1,
          1.6.1,
          1.5.2,
          1.4.2,
          1.3.2,
          1.3.0,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install grizz
        run: |
          pip install grizz

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.4
        with:
          package-name: 'scikit-learn'
          package-version: ${{ matrix.scikit-learn-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py


  scipy:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        scipy-version: [
          1.16.1,
          1.15.0,
          1.14.1,
          1.13.1,
          1.12.0,
          1.11.4,
          1.10.1,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install grizz
        run: |
          pip install grizz

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.4
        with:
          package-name: 'scipy'
          package-version: ${{ matrix.scipy-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py


  tqdm:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.13', '3.12', '3.11', '3.10', '3.9' ]
        tqdm-version: [ 4.67.1, 4.66.5, 4.65.2 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          pip install grizz

      - name: Install valid package version
        uses: durandtibo/pip-install-package-action@v0.3.4
        with:
          package-name: 'tqdm'
          package-version: ${{ matrix.tqdm-version }}
          python-version: ${{ matrix.python-version }}

      - name: Run some checks
        run: |
          python tests/package_checks.py
